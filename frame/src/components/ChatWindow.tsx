"use client"

import { useState } from "react"
import { Button } from "~/components/ui/Button"
import { Input } from "~/components/ui/input"
import { ScrollArea } from "~/components/ui/scroll-area"

interface ChatWindowProps {
  personalityType: string
  onClose: () => void
}

interface Message {
  text: string
  sender: "user" | "ai"
}

export default function ChatWindow({ personalityType, onClose }: ChatWindowProps) {
  const [messages, setMessages] = useState<Message[]>([
    { text: `Hello! I'm your ${personalityType} personality. How can I assist you today?`, sender: "ai" },
  ])
  const [input, setInput] = useState("")

  const handleSend = () => {
    if (input.trim()) {
      setMessages([...messages, { text: input, sender: "user" }])
      setInput("")
      // Simulate AI response
      setTimeout(() => {
        setMessages((prevMessages) => [
          ...prevMessages,
          {
            text: `As a ${personalityType}, I would respond to that by saying: This is a simulated response. In a real application, this would be generated by an AI model.`,
            sender: "ai",
          },
        ])
      }, 1000)
    }
  }

  return (
    <div className="flex flex-col h-full">
      <div className="flex-grow overflow-hidden">
        <ScrollArea className="h-[400px] w-full pr-4">
          {messages.map((message, index) => (
            <div key={index} className={`mb-4 ${message.sender === "user" ? "text-right" : "text-left"}`}>
              <span
                className={`inline-block p-2 rounded-lg ${
                  message.sender === "user"
                    ? "bg-primary text-primary-foreground"
                    : "bg-secondary text-secondary-foreground"
                }`}
              >
                {message.text}
              </span>
            </div>
          ))}
        </ScrollArea>
      </div>
      <div className="mt-4 flex space-x-2">
        <Input
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Type your message..."
          onKeyPress={(e) => e.key === "Enter" && handleSend()}
        />
        <Button onClick={handleSend}>Send</Button>
      </div>
      <Button variant="outline" onClick={onClose} className="mt-4 w-full">
        Close Chat
      </Button>
    </div>
  )
}

